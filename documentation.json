{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "CheckboxOptions",
            "id": "class-CheckboxOptions-5a72335aff8ca78b4b315683464da7380b6ff9f3c08fdf31deb6a6d7d6ba2489d412f4e71a1cf05290554a0dd32ff391c4dd5f01d5c9821bec57482c6f580038",
            "file": "src/checkbox/options/checkbox.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { CheckboxSizeEnum } from '../enums/checkbox-size.enum';\r\nimport { ICheckboxOptions } from './checkbox-options.interface';\r\n\r\n/** The checkbox options */\r\nexport class CheckboxOptions implements ICheckboxOptions {\r\n\t/** The icon the checkbox will have */\r\n\ticon?: string;\r\n\t/** The image the checkbox will have */\r\n\timage?: string;\r\n\t/** The size of the checkbox */\r\n\tsize?: CheckboxSizeEnum = CheckboxSizeEnum.Regular;\r\n\r\n\tconstructor(checkbox?: Partial<ICheckboxOptions>) {\r\n\t\tif (checkbox) {\r\n\t\t\tObject.assign(this, checkbox);\r\n\t\t}\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "checkbox",
                        "type": "Partial<ICheckboxOptions>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "checkbox",
                        "type": "Partial<ICheckboxOptions>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>The icon the checkbox will have</p>\n",
                    "line": 7,
                    "rawdescription": "\nThe icon the checkbox will have"
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>The image the checkbox will have</p>\n",
                    "line": 9,
                    "rawdescription": "\nThe image the checkbox will have"
                },
                {
                    "name": "size",
                    "defaultValue": "CheckboxSizeEnum.Regular",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CheckboxSizeEnum",
                    "optional": true,
                    "description": "<p>The size of the checkbox</p>\n",
                    "line": 11,
                    "rawdescription": "\nThe size of the checkbox"
                }
            ],
            "description": "<p>The checkbox options</p>\n",
            "rawdescription": "\nThe checkbox options",
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ICheckboxOptions"
            ]
        },
        {
            "name": "ICheckboxOptions",
            "id": "class-ICheckboxOptions-ddf30272e9d1e383a5de8dfbdcb7a95b5497c0fcc605eb0780b0a593674925e2baeaa9a6e0b816031f36f74e4180c584f6309a3a14e532d36a341bc21a29f312",
            "file": "src/checkbox/options/checkbox-options.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { CheckboxSizeEnum } from '../enums/checkbox-size.enum';\r\n\r\nexport class ICheckboxOptions {\r\n\ticon?: string;\r\n\timage?: string;\r\n\tsize?: CheckboxSizeEnum;\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CheckboxSizeEnum",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "InputOptions",
            "id": "class-InputOptions-1d80f79523666284db17596546af3b806225bf2e22ac644832daa0d5912c9b40253d4a504761b4111e1e8e616dc4618814b1eed0295c32c4180d91da45127a4a",
            "file": "src/input/options/input.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { InputSizeEnum } from '../enums/input-size.enum';\r\n\r\n/** The input options */\r\nexport class InputOptions {\r\n\t/** The text for the input placeholder */\r\n\tplaceholder?: string;\r\n\t/** The maximum number of characters that the user is allowed to enter into the input field. */\r\n\tmaxLength?: number;\r\n\t/** The size of the input */\r\n\tsize?: InputSizeEnum = InputSizeEnum.Regular;\r\n}\r\n",
            "properties": [
                {
                    "name": "maxLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "<p>The maximum number of characters that the user is allowed to enter into the input field.</p>\n",
                    "line": 8,
                    "rawdescription": "\nThe maximum number of characters that the user is allowed to enter into the input field."
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>The text for the input placeholder</p>\n",
                    "line": 6,
                    "rawdescription": "\nThe text for the input placeholder"
                },
                {
                    "name": "size",
                    "defaultValue": "InputSizeEnum.Regular",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSizeEnum",
                    "optional": true,
                    "description": "<p>The size of the input</p>\n",
                    "line": 10,
                    "rawdescription": "\nThe size of the input"
                }
            ],
            "description": "<p>The input options</p>\n",
            "rawdescription": "\nThe input options",
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IRadioButtonGroup",
            "id": "class-IRadioButtonGroup-c4c2a0f6ace52044a4bc1229a00374a93c9e94e799ec4e97bd58cd9d6a63e0811b621c35e665d63ee3a3bb156c9e3234fdb733506a08ba3421239852f36ae3e0",
            "file": "src/radio-button-group/interfaces/radio-button-group.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class IRadioButtonGroup<Value = string> {\r\n  /** Name of the item */\r\n  value!: Value;\r\n  /** Description of the Item */\r\n  description!: string;\r\n  /** Item is selected */\r\n  selected?: boolean;\r\n  /** Item is disabled */\r\n  disabled?: boolean;\r\n  /** The icon the radio button will have */\r\n  icon?: string;\r\n  /** The image the radio button will have */\r\n  image?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Description of the Item</p>\n",
                    "line": 8,
                    "rawdescription": "\nDescription of the Item"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Item is disabled</p>\n",
                    "line": 12,
                    "rawdescription": "\nItem is disabled"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>The icon the radio button will have</p>\n",
                    "line": 14,
                    "rawdescription": "\nThe icon the radio button will have"
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>The image the radio button will have</p>\n",
                    "line": 16,
                    "rawdescription": "\nThe image the radio button will have"
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Item is selected</p>\n",
                    "line": 10,
                    "rawdescription": "\nItem is selected"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Value",
                    "optional": false,
                    "description": "<p>Name of the item</p>\n",
                    "line": 6,
                    "rawdescription": "\nName of the item"
                }
            ],
            "description": "<p>Represents a default range item. Has a set of options and function that adds behavior to the item.</p>\n",
            "rawdescription": "\n\nRepresents a default range item. Has a set of options and function that adds behavior to the item.\n",
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IRadioButtonGroupOptions",
            "id": "class-IRadioButtonGroupOptions-6519fab7a5d7728075a0984cbbc743e0bb995ac384d43b5797846c399ba0c17464a65dfadf0d3db57a3438c4b323330a65be1dd88191349bdc603136b6bdfaf8",
            "file": "src/radio-button-group/options/radio-button-group-options.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { RadioButtonGroupSizeEnum } from '../enums/radio-button-group-size.enum';\r\n\r\nexport class IRadioButtonGroupOptions {\r\n  size?: RadioButtonGroupSizeEnum;\r\n}\r\n",
            "properties": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RadioButtonGroupSizeEnum",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RadioButtonGroupOptions",
            "id": "class-RadioButtonGroupOptions-f1e607708a08c25513cd7b13c6846fccc9c788ed8d055a808e583550deae201fc4aa142108b950a8355f6436f20f6f0320de13fcaecbeac109f3ca6d2627d52d",
            "file": "src/radio-button-group/options/radio-button-group.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { RadioButtonGroupSizeEnum } from '../enums/radio-button-group-size.enum';\r\nimport { IRadioButtonGroupOptions } from './radio-button-group-options.interface';\r\n\r\n/** The checkbox options */\r\nexport class RadioButtonGroupOptions implements IRadioButtonGroupOptions {\r\n  /** The size of the checkbox */\r\n  size?: RadioButtonGroupSizeEnum = RadioButtonGroupSizeEnum.Regular;\r\n\r\n  constructor(radioButtonGroup?: Partial<IRadioButtonGroupOptions>) {\r\n    if (radioButtonGroup) {\r\n      Object.assign(this, radioButtonGroup);\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "radioButtonGroup",
                        "type": "Partial<IRadioButtonGroupOptions>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "radioButtonGroup",
                        "type": "Partial<IRadioButtonGroupOptions>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "size",
                    "defaultValue": "RadioButtonGroupSizeEnum.Regular",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RadioButtonGroupSizeEnum",
                    "optional": true,
                    "description": "<p>The size of the checkbox</p>\n",
                    "line": 7,
                    "rawdescription": "\nThe size of the checkbox"
                }
            ],
            "description": "<p>The checkbox options</p>\n",
            "rawdescription": "\nThe checkbox options",
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IRadioButtonGroupOptions"
            ]
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-e3e51687f636d7aa64d515fffd5b318d66d299530540d15adc10a11394b8e988d6c8f39e3970fd6504a1bf71c9d113c7ab0d0c9061c06f673506a4afb1efba84",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "documents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "indicativos",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "title",
                    "defaultValue": "'storybook'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'storybook';\n  documents: any[];\n  indicativos: any[];\n\n  constructor() {\n    this.documents = [\n      {\n        value: 'passport',\n        label: 'Passport',\n      },\n      {\n        value: 'citizenCard',\n        label: 'Citizen Card',\n      },\n      {\n        value: 'driversLicense',\n        label: \"Driver's License\",\n      },\n    ];\n\n    this.indicativos = [\n      {\n        value: 'pt',\n        label: '+ 351',\n        image: '../assets/flags/pt.svg',\n      },\n      {\n        value: 'es',\n        label: '+ 34',\n        image: '../assets/flags/es.svg',\n      },\n      {\n        value: 'uk',\n        label: '+ 44',\n        image: '../assets/flags/uk.svg',\n      },\n    ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "templateData": "<pri-button></pri-button>\n<br>\n<pri-input-field></pri-input-field><br>\n<pri-input-field type=\"number\" tag=\"€\" [min]=\"0\" placeholder=\"0.00\"></pri-input-field><br>\n<pri-input-number [isDisabled]=\"true\" tag=\"€\" [min]=\"0\" value=\"2.4\" placeholder=\"0.00\"></pri-input-number><br>\n<pri-input-number [isDisabled]=\"true\" tag=\"€\" [min]=\"0\" value=\"3\" placeholder=\"0.00\" type=\"numberSecondary\"></pri-input-number><br>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-b3561d215319d5f56e92e0af07b658bf19f2a334fc10b565d9f4eb33edbaa248849b7dcef15b594663c124d6dc57f2c2ce1874e83e068cf95f7c6704a9c939ad",
            "file": "src/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pri-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'theme'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "extraClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "nextButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'primaryFilled'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "url",
                    "defaultValue": "'#'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pri-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n})\r\nexport class ButtonComponent {\r\n  @Input() url = '#';\r\n  @Input() icon = '';\r\n  @Input() text = 'Button';\r\n  @Input() size = 'default'; // small | default | large\r\n  @Input() type = 'primaryFilled'; //primaryFilled | primaryOutlined | secondaryFilled | secondaryOutlined | tertiary\r\n  @Input() color = 'theme'; // theme | grey | info | error | warning | success | white | black\r\n  @Input() count = 0;\r\n  @Input() nextButton = false;\r\n  @Input() isDisabled = false;\r\n  @Input() loading = false;\r\n  @Input() extraClasses = '';\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "a{\r\n    text-decoration: none;\r\n}\r\n\r\nbutton{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 6px;\r\n    padding: 8px 16px;\r\n    font-size: 14px;\r\n    line-height: 19px;\r\n    color: var(--grey-1);\r\n    background-color: var(--theme-100);\r\n    border: 1px solid var(--theme-100);\r\n    border-radius: 4px;\r\n    user-select: none;\r\n    transition: all 0.4s;\r\n\r\n    & > i{\r\n        position: relative;\r\n        top: -1px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    & > span{\r\n        padding: 0 4px;\r\n        font-size: 10px;\r\n        line-height: 13px;\r\n        text-align: center;\r\n        color: black;\r\n        background-color: var(--white);\r\n        border-radius: 8px;\r\n    }\r\n\r\n    &.small{\r\n        padding: 4px 12px;\r\n        font-size: 12px;\r\n        line-height: 16px;\r\n\r\n        & > i{\r\n            top: 0;\r\n            font-size: 12px;\r\n        }\r\n    }\r\n\r\n    &.large{\r\n        padding: 12px 20px;\r\n        font-size: 16px;\r\n        line-height: 21px;\r\n\r\n        & > i{\r\n            font-size: 20px;\r\n        }\r\n\r\n        & > span{\r\n            padding: 2px 6px;\r\n            font-size: 12px;\r\n            line-height: 16px;\r\n            border-radius: 10px;\r\n        }\r\n    }\r\n\r\n    &:disabled{\r\n        color: var(--grey-6) !important;\r\n        background-color: var(--grey-4) !important;\r\n        border-color: var(--grey-4) !important;\r\n\r\n        & > span{\r\n            color: var(--grey-4) !important;\r\n            background-color: var(--grey-6) !important;\r\n        }\r\n    }\r\n\r\n    &:focus{\r\n        border-color: var(--grey-8);\r\n    }\r\n\r\n    // #region Primary Filled\r\n\r\n        &.theme{\r\n\r\n            &:hover{\r\n                background-color: var(--theme-80);\r\n                border-color: var(--theme-80);\r\n            }\r\n\r\n            &:active{\r\n                background-color: var(--theme-100);\r\n            }\r\n\r\n            & > span{\r\n                color: var(--theme-100);\r\n            }\r\n        }\r\n\r\n        &.grey{\r\n            background-color: var(--grey-8);\r\n            border-color: var(--grey-8);\r\n\r\n            &:hover{\r\n                background-color: var(--grey-7);\r\n                border-color: var(--grey-7);\r\n            }\r\n\r\n            &:active{\r\n                background-color: var(--grey-8);\r\n            }\r\n\r\n            & > span{\r\n                color: var(--grey-8);\r\n            }\r\n        }\r\n\r\n        &.info{\r\n            background-color: var(--info-100);\r\n            border-color: var(--info-100);\r\n\r\n            &:hover{\r\n                background-color: var(--info-80);\r\n                border-color: var(--info-80);\r\n            }\r\n\r\n            &:active{\r\n                background-color: var(--info-100);\r\n            }\r\n\r\n            & > span{\r\n                color: var(--info-100);\r\n            }\r\n        }\r\n\r\n        &.error{\r\n            background-color: var(--error-100);\r\n            border-color: var(--error-100);\r\n\r\n            &:hover{\r\n                background-color: var(--error-80);\r\n                border-color: var(--error-80);\r\n            }\r\n\r\n            &:active{\r\n                background-color: var(--error-100);\r\n            }\r\n\r\n            & > span{\r\n                color: var(--error-100);\r\n            }\r\n        }\r\n\r\n        &.warning{\r\n            background-color: var(--warning-100);\r\n            border-color: var(--warning-100);\r\n\r\n            &:hover{\r\n                background-color: var(--warning-80);\r\n                border-color: var(--warning-80);\r\n            }\r\n\r\n            &:active{\r\n                background-color: var(--warning-100);\r\n            }\r\n\r\n            & > span{\r\n                color: var(--warning-100);\r\n            }\r\n        }\r\n\r\n        &.success{\r\n            background-color: var(--success-100);\r\n            border-color: var(--success-100);\r\n\r\n            &:hover{\r\n                background-color: var(--success-80);\r\n                border-color: var(--success-80);\r\n            }\r\n\r\n            &:active{\r\n                background-color: var(--success-100);\r\n            }\r\n\r\n            & > span{\r\n                color: var(--success-100);\r\n            }\r\n        }\r\n\r\n        &.white{\r\n            color: var(--black);\r\n            background-color: var(--white);\r\n            border-color: var(--white);\r\n\r\n            & > span{\r\n                background-color: var(--black);\r\n                color: var(--white);\r\n            }\r\n        }\r\n\r\n        &.black{\r\n            color: var(--white);\r\n            background-color: var(--black);\r\n            border-color: var(--black);\r\n\r\n            & > span{\r\n                background-color: var(--white);\r\n                color: var(--black);\r\n            }\r\n        }\r\n\r\n    // #endregion\r\n\r\n    // #region Primary Outlined\r\n\r\n        &.primaryOutlined{\r\n            background-color: transparent !important;\r\n\r\n            & > span{\r\n                color: var(--grey-1);\r\n            }\r\n\r\n            &.theme{\r\n                color: var(--theme-100);\r\n\r\n                &:hover{\r\n                    color: var(--theme-highlight);\r\n                    border-color: var(--theme-highlight);\r\n                }\r\n\r\n                &:active{\r\n                    border-color: var(--theme-60);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--theme-100);\r\n                }\r\n            }\r\n\r\n            &.grey{\r\n                color: var(--grey-8);\r\n\r\n                &:hover{\r\n                    color: var(--grey-7);\r\n                    border-color: var(--grey-7);\r\n                }\r\n\r\n                &:active{\r\n                    color: var(--grey-8);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--grey-8);\r\n                }\r\n            }\r\n\r\n            &.info{\r\n                color: var(--info-100);\r\n\r\n                &:hover{\r\n                    color: var(--info-highlight);\r\n                    border-color: var(--info-highlight);\r\n                }\r\n\r\n                &:active{\r\n                    border-color: var(--info-60);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--info-100);\r\n                }\r\n            }\r\n\r\n            &.error{\r\n                color: var(--error-100);\r\n\r\n                &:hover{\r\n                    color: var(--error-highlight);\r\n                    border-color: var(--error-highlight);\r\n                }\r\n\r\n                &:active{\r\n                    border-color: var(--error-60);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--error-100);\r\n                }\r\n            }\r\n\r\n            &.warning{\r\n                color: var(--warning-100);\r\n\r\n                &:hover{\r\n                    color: var(--warning-highlight);\r\n                    border-color: var(--warning-highlight);\r\n                }\r\n\r\n                &:active{\r\n                    border-color: var(--warning-60);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--warning-100);\r\n                }\r\n            }\r\n\r\n            &.success{\r\n                color: var(--success-100);\r\n\r\n                &:hover{\r\n                    color: var(--success-highlight);\r\n                    border-color: var(--success-highlight);\r\n                }\r\n\r\n                &:active{\r\n                    border-color: var(--success-60);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--success-100);\r\n                }\r\n            }\r\n\r\n            &.white{\r\n                color: var(--white);\r\n\r\n                & > span{\r\n                    color: var(--black);\r\n                    background-color: var(--white);\r\n                }\r\n            }\r\n            \r\n            &.black{\r\n                color: var(--black);\r\n\r\n                & > span{\r\n                    color: var(--white);\r\n                    background-color: var(--black);\r\n                }\r\n            }\r\n        }\r\n\r\n    // #endregion\r\n\r\n    // #region Secondary Filled\r\n\r\n        &.secondaryFilled{\r\n\r\n            &.theme{\r\n                color: var(--theme-100);\r\n                background-color: var(--theme-20);\r\n                border-color: var(--theme-20);\r\n\r\n                &:hover{\r\n                    background-color: var(--theme-40);\r\n                    border-color: var(--theme-40);\r\n                }\r\n\r\n                &:active{\r\n                    background-color: var(--theme-20);\r\n                }\r\n            }\r\n\r\n            &.grey{\r\n                color: var(--grey-8);\r\n                background-color: var(--grey-1);\r\n                border-color: var(--grey-4);\r\n\r\n                &:hover{\r\n                    background-color: var(--grey-2);\r\n                    border-color: var(--grey-5);\r\n                }\r\n\r\n                &:active{\r\n                    background-color: var(--grey-1);\r\n                }\r\n\r\n                & > span{\r\n                    color: var(--grey-1);\r\n                    background-color: var(--grey-8);\r\n                }\r\n            }\r\n\r\n            &.info{\r\n                color: var(--info-100);\r\n                background-color: var(--info-20);\r\n                border-color: var(--info-20);\r\n\r\n                &:hover{\r\n                    background-color: var(--info-40);\r\n                    border-color: var(--info-40);\r\n                }\r\n\r\n                &:active{\r\n                    background-color: var(--info-20);\r\n                }\r\n            }\r\n\r\n            &.error{\r\n                color: var(--error-100);\r\n                background-color: var(--error-20);\r\n                border-color: var(--error-20);\r\n\r\n                &:hover{\r\n                    background-color: var(--error-40);\r\n                    border-color: var(--error-40);\r\n                }\r\n\r\n                &:active{\r\n                    background-color: var(--error-20);\r\n                }\r\n            }\r\n\r\n            &.warning{\r\n                color: var(--warning-100);\r\n                background-color: var(--warning-20);\r\n                border-color: var(--warning-20);\r\n\r\n                &:hover{\r\n                    background-color: var(--warning-40);\r\n                    border-color: var(--warning-40);\r\n                }\r\n\r\n                &:active{\r\n                    background-color: var(--warning-20);\r\n                }\r\n            }\r\n\r\n            &.success{\r\n                color: var(--success-100);\r\n                background-color: var(--success-20);\r\n                border-color: var(--success-20);\r\n\r\n                &:hover{\r\n                    background-color: var(--success-40);\r\n                    border-color: var(--success-40);\r\n                }\r\n\r\n                &:active{\r\n                    background-color: var(--success-20);\r\n                }\r\n            }\r\n        }\r\n\r\n    // #endregion\r\n\r\n    // #region Secondary Outlined\r\n\r\n        &.secondaryOutlined{\r\n            background-color: transparent !important;\r\n\r\n            & > span{\r\n                color: var(--grey-1);\r\n            }\r\n\r\n            &.theme{\r\n                color: var(--theme-100);\r\n                border-color: var(--theme-40);\r\n\r\n                &:hover{\r\n                    border-color: var(--theme-60);\r\n                }\r\n\r\n                &:active{\r\n                    border-color: var(--theme-40);\r\n                    color: var(--theme-highlight);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--theme-100);\r\n                }\r\n            }\r\n\r\n            &.grey{\r\n                color: var(--grey-8);\r\n                border-color: var(--grey-5);\r\n\r\n                &:hover{\r\n                    border-color: var(--grey-6);\r\n                }\r\n\r\n                &:active{\r\n                    border-color: var(--grey-5);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--grey-8);\r\n                }\r\n            }\r\n\r\n            &.info{\r\n                color: var(--info-100);\r\n                border-color: var(--info-40);\r\n\r\n                &:hover{\r\n                    border-color: var(--info-60);\r\n                }\r\n\r\n                &:active{\r\n                    border-color: var(--info-40);\r\n                    color: var(--info-highlight);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--info-100);\r\n                }\r\n            }\r\n\r\n            &.error{\r\n                color: var(--error-100);\r\n                border-color: var(--error-40);\r\n\r\n                &:hover{\r\n                    border-color: var(--error-60);\r\n                }\r\n\r\n                &:active{\r\n                    border-color: var(--error-40);\r\n                    color: var(--error-highlight);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--error-100);\r\n                }\r\n            }\r\n\r\n            &.warning{\r\n                color: var(--warning-100);\r\n                border-color: var(--warning-40);\r\n\r\n                &:hover{\r\n                    border-color: var(--warning-60);\r\n                }\r\n\r\n                &:active{\r\n                    border-color: var(--warning-40);\r\n                    color: var(--warning-highlight);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--warning-100);\r\n                }\r\n            }\r\n\r\n            &.success{\r\n                color: var(--success-100);\r\n                border-color: var(--success-40);\r\n\r\n                &:hover{\r\n                    border-color: var(--success-60);\r\n                }\r\n\r\n                &:active{\r\n                    border-color: var(--success-40);\r\n                    color: var(--success-highlight);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--success-100);\r\n                }\r\n            }\r\n        }\r\n\r\n    // #endregion\r\n\r\n    // #region Tertiary\r\n\r\n        &.tertiary{\r\n            background-color: transparent !important;\r\n            border-color: transparent !important;\r\n\r\n            &:hover:not(:disabled):not(.white):not(.black){\r\n                background-color: var(--grey-2) !important;\r\n            }\r\n\r\n            & > span{\r\n                color: var(--grey-1);\r\n            }\r\n\r\n            &.theme{\r\n                color: var(--theme-100);\r\n\r\n                &:active{\r\n                    color: var(--theme-highlight);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--theme-100);\r\n                }\r\n            }\r\n\r\n            &.grey{\r\n                color: var(--grey-8);\r\n\r\n                & > span{\r\n                    background-color: var(--grey-8);\r\n                }\r\n            }\r\n\r\n            &.info{\r\n                color: var(--info-100);\r\n\r\n                &:active{\r\n                    color: var(--info-highlight);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--info-100);\r\n                }\r\n            }\r\n\r\n            &.error{\r\n                color: var(--error-100);\r\n\r\n                &:active{\r\n                    color: var(--error-highlight);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--error-100);\r\n                }\r\n            }\r\n\r\n            &.warning{\r\n                color: var(--warning-100);\r\n\r\n                &:active{\r\n                    color: var(--warning-highlight);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--warning-100);\r\n                }\r\n            }\r\n\r\n            &.success{\r\n                color: var(--success-100);\r\n\r\n                &:active{\r\n                    color: var(--success-highlight);\r\n                }\r\n\r\n                & > span{\r\n                    background-color: var(--success-100);\r\n                }\r\n            }\r\n\r\n            &.white{\r\n                color: var(--white);\r\n\r\n                & > span{\r\n                    color: var(--black);\r\n                    background-color: var(--white);\r\n                }\r\n            }\r\n            \r\n            &.black{\r\n                color: var(--black);\r\n\r\n                & > span{\r\n                    color: var(--white);\r\n                    background-color: var(--black);\r\n                }\r\n            }\r\n        }\r\n\r\n    // #endregion\r\n\r\n    // #region Loading animations (elements)\r\n        &.loading{\r\n            pointer-events: none;\r\n\r\n            .loading-dot-1,\r\n            .loading-dot-2{\r\n                margin: 4px 0 3px 0;\r\n                height: 12px;\r\n                width: 12px;\r\n                border-radius: 50%;\r\n\r\n                animation-duration: 1s;\r\n                animation-iteration-count: infinite;\r\n            }\r\n\r\n            .loading-dot-2{\r\n                animation-delay: 0.5s;\r\n            }\r\n\r\n            &.theme{\r\n                .loading-dot-1,\r\n                .loading-dot-2{\r\n                    background-color: var(--theme-80);\r\n                    animation-name: loading-dots-theme;\r\n                }\r\n            }\r\n\r\n            &.grey{\r\n                .loading-dot-1,\r\n                .loading-dot-2{\r\n                    background-color: var(--grey-7);\r\n                    animation-name: loading-dots-grey;\r\n                }\r\n            }\r\n\r\n            &.info{\r\n                .loading-dot-1,\r\n                .loading-dot-2{\r\n                    background-color: var(--info-80);\r\n                    animation-name: loading-dots-info;\r\n                }\r\n            }\r\n\r\n            &.error{\r\n                .loading-dot-1,\r\n                .loading-dot-2{\r\n                    background-color: var(--error-80);\r\n                    animation-name: loading-dots-error;\r\n                }\r\n            }\r\n\r\n            &.warning{\r\n                .loading-dot-1,\r\n                .loading-dot-2{\r\n                    background-color: var(--warning-80);\r\n                    animation-name: loading-dots-warning;\r\n                }\r\n            }\r\n\r\n            &.success{\r\n                .loading-dot-1,\r\n                .loading-dot-2{\r\n                    background-color: var(--success-80);\r\n                    animation-name: loading-dots-success;\r\n                }\r\n            }\r\n\r\n            &.white{\r\n                .loading-dot-1,\r\n                .loading-dot-2{\r\n                    background-color: var(--grey-5);\r\n                    animation-name: loading-dots-white;\r\n                }\r\n            }\r\n\r\n            &.black{\r\n                .loading-dot-1,\r\n                .loading-dot-2{\r\n                    background-color: var(--grey-8);\r\n                    animation-name: loading-dots-black;\r\n                }\r\n            }\r\n        }\r\n    // #endregion\r\n\r\n    // #region Loading animations (Keyframes)\r\n        @keyframes loading-dots-theme{\r\n            from{\r\n                background-color: var(--theme-80);\r\n            }\r\n            50%{\r\n                background-color: var(--theme-60);\r\n            }\r\n            to{\r\n                background-color: var(--theme-80);\r\n            }\r\n        }\r\n\r\n        @keyframes loading-dots-grey{\r\n            from{\r\n                background-color: var(--grey-7);\r\n            }\r\n            50%{\r\n                background-color: var(--grey-6);\r\n            }\r\n            to{\r\n                background-color: var(--grey-7);\r\n            }\r\n        }\r\n\r\n        @keyframes loading-dots-info{\r\n            from{\r\n                background-color: var(--info-80);\r\n            }\r\n            50%{\r\n                background-color: var(--info-60);\r\n            }\r\n            to{\r\n                background-color: var(--info-80);\r\n            }\r\n        }\r\n\r\n        @keyframes loading-dots-error{\r\n            from{\r\n                background-color: var(--error-80);\r\n            }\r\n            50%{\r\n                background-color: var(--error-60);\r\n            }\r\n            to{\r\n                background-color: var(--error-80);\r\n            }\r\n        }\r\n\r\n        @keyframes loading-dots-warning{\r\n            from{\r\n                background-color: var(--warning-80);\r\n            }\r\n            50%{\r\n                background-color: var(--warning-60);\r\n            }\r\n            to{\r\n                background-color: var(--warning-80);\r\n            }\r\n        }\r\n\r\n        @keyframes loading-dots-success{\r\n            from{\r\n                background-color: var(--success-80);\r\n            }\r\n            50%{\r\n                background-color: var(--success-60);\r\n            }\r\n            to{\r\n                background-color: var(--success-80);\r\n            }\r\n        }\r\n\r\n        @keyframes loading-dots-white{\r\n            from{\r\n                background-color: var(--grey-5);\r\n            }\r\n            50%{\r\n                background-color: var(--grey-3);\r\n            }\r\n            to{\r\n                background-color: var(--grey-5);\r\n            }\r\n        }\r\n\r\n        @keyframes loading-dots-black{\r\n            from{\r\n                background-color: var(--grey-8);\r\n            }\r\n            50%{\r\n                background-color: var(--grey-6);\r\n            }\r\n            to{\r\n                background-color: var(--grey-8);\r\n            }\r\n        }\r\n    // #endregion\r\n}",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "templateData": "<a href=\"{{url}}\" *ngIf=\"!loading\">\r\n    <button class=\"{{size}} {{type}} {{color}} {{extraClasses}}\" [attr.disabled]=\"isDisabled ? '' : null\" title=\"{{text}}\">\r\n        <i *ngIf=\"icon\" class=\"{{icon}}\"></i>\r\n        {{text}}\r\n        <span *ngIf=\"count\">{{count}}</span>\r\n        <i *ngIf=\"nextButton\" class=\"ti-ux-arrow-right\"></i>\r\n    </button>\r\n</a>\r\n\r\n<button *ngIf=\"loading\" class=\"{{size}} {{type}} {{color}} loading {{extraClasses}}\" [attr.disabled]=\"isDisabled ? '' : null\" title=\"{{text}}\">\r\n    <div class=\"loading-dot-1\"></div>\r\n    <div class=\"loading-dot-2\"></div>\r\n</button>"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-d2fa6d5350820d52454fa4e44b5cc6bcad290ca93fc1b410ed9a2e528f554023b6804f7556671d2494dae2eb9311cd40b14e2dfc665c9108bd3965c016ab47c0",
            "file": "src/checkbox/checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pri-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "extraClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "new CheckboxOptions()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "CheckboxOptions",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checkboxClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ToggleCheckbox",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { CheckboxOptions } from './options/checkbox.options';\r\n\r\n@Component({\r\n  selector: 'pri-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n  imports: [CommonModule],\r\n  encapsulation: ViewEncapsulation.None,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CheckboxComponent {\r\n  @Input() options: CheckboxOptions = new CheckboxOptions();\r\n  @Input() selected = false;\r\n  @Input() indeterminate = false;\r\n  @Input() isDisabled = false;\r\n  @Input() extraClasses = '';\r\n\r\n  @Output() checkboxClick: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  public ToggleCheckbox() {\r\n    this.selected = !this.selected;\r\n    this.checkboxClick.emit(this.selected);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "pri-checkbox {\r\n  .checkbox-wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n\r\n    .checkbox {\r\n      position: relative;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      margin: 0;\r\n      height: 1.4em;\r\n      width: 1.4em;\r\n      border: 1px solid var(--grey-5);\r\n      border-radius: 4px;\r\n      box-sizing: border-box;\r\n      cursor: pointer;\r\n      transition: all 0.2s;\r\n\r\n      &:after {\r\n        content: \"\\e64c\";\r\n        font-family: \"pollen\";\r\n        font-size: 0.85em;\r\n        font-weight: 600;\r\n        color: var(--grey-1);\r\n        opacity: 0;\r\n        transform: scale(1.8);\r\n        transition: all 0.2s;\r\n      }\r\n\r\n      &.indeterminate {\r\n        &:after {\r\n          content: \"\\e906\";\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        border-color: var(--theme-100);\r\n      }\r\n\r\n      &.active {\r\n        background-color: var(--theme-100);\r\n        border-color: var(--theme-100);\r\n\r\n        &:after {\r\n          opacity: 1;\r\n          transform: scale(1);\r\n        }\r\n      }\r\n\r\n      input {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    & > i {\r\n      font-size: 1.4em !important;\r\n    }\r\n\r\n    & > img {\r\n      height: 1.4em;\r\n    }\r\n\r\n    &.disabled {\r\n      pointer-events: none;\r\n\r\n      .checkbox {\r\n        background-color: var(--grey-2);\r\n        border-color: var(--grey-4);\r\n\r\n        &.active {\r\n          background-color: var(--grey-4);\r\n        }\r\n      }\r\n    }\r\n\r\n    &.small {\r\n      font-size: 0.8em;\r\n    }\r\n\r\n    &.large {\r\n      font-size: 1.2em;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"checkbox-wrapper {{options.size}} {{extraClasses}}\" [class.disabled]=\"isDisabled\" data-testid=\"test\">\r\n    <div class=\"checkbox\" [class.active]=\"selected\" [class.indeterminate]=\"indeterminate\" (click)=\"ToggleCheckbox()\">\r\n        <input type=\"checkbox\" [attr.checked]=\"selected\" />\r\n    </div>\r\n    <i *ngIf=\"options.icon\" [class]=\"options.icon\"></i>\r\n    <img *ngIf=\"options.image\" [src]=\"options.image\" />\r\n</div>"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-bb857539315f2915dc4e5cb31b37bbc9668fb8b72db8670caa5eedf30a962cec0e740fcb94d69b313559fac4106869a3bc4ef8643853f91d91e2bcffe71c5405",
            "file": "src/input/input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pri-input",
            "styleUrls": [
                "input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "new InputOptions()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "InputOptions",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input', {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "modelChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputOptions } from './options/input.options';\r\n\r\n@Component({\r\n  selector: 'pri-input',\r\n  templateUrl: 'input.component.html',\r\n  styleUrls: ['input.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  imports: [CommonModule, FormsModule],\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class InputComponent {\r\n  @Input()\r\n  isDisabled!: boolean;\r\n  @Input() options: InputOptions = new InputOptions();\r\n  @Input()\r\n  value!: string;\r\n\r\n  @Output() valueChange: EventEmitter<string> = new EventEmitter();\r\n  @ViewChild('input', { static: true })\r\n  input!: ElementRef;\r\n\r\n  constructor(private changeDetection: ChangeDetectorRef) {}\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.isDisabled = isDisabled;\r\n    this.changeDetection.detectChanges();\r\n  }\r\n\r\n  clearValue() {\r\n    this.modelChange('');\r\n    this.input.nativeElement.focus();\r\n  }\r\n\r\n  modelChange(value: string) {\r\n    this.value = value;\r\n    // this.valueChange.emit(value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "pri-input {\r\n  &.ng-invalid.ng-touched.ng-dirty {\r\n    .input-field-wrapper {\r\n      input {\r\n        border-color: var(--error-100) !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.ng-valid,\r\n  &.ng-untouched,\r\n  &.ng-pristine {\r\n    .input-field-wrapper {\r\n      input {\r\n        &:hover:not(:focus-visible):not(:focus):not(:disabled) {\r\n          border-color: var(--grey-5) !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.input-field-wrapper {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 100%;\r\n  font-size: 1em;\r\n\r\n  input {\r\n    padding: 0.55em 0.85em;\r\n    padding-right: 1.7em;\r\n    width: 100%;\r\n    font-size: 1em;\r\n    line-height: 1.35em;\r\n    color: var(--grey-8);\r\n    background-color: var(--grey-1);\r\n    border: 1px solid var(--grey-4) !important;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    transition: border 0.3s;\r\n\r\n    &::placeholder {\r\n      color: var(--grey-6);\r\n    }\r\n\r\n    &:focus,\r\n    &:focus-visible {\r\n      outline: none;\r\n      border-color: var(--theme-100) !important;\r\n    }\r\n\r\n    &:disabled {\r\n      color: var(--grey-6);\r\n      background-color: var(--grey-3);\r\n      pointer-events: none;\r\n    }\r\n  }\r\n\r\n  .value-dismiss {\r\n    display: none;\r\n    position: absolute;\r\n    top: 1.05em;\r\n    right: 0.8em;\r\n    font-size: 0.85em;\r\n    color: var(--grey-8);\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  &:has(input:focus) {\r\n    .value-dismiss {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  &.small {\r\n    font-size: 0.8em;\r\n  }\r\n\r\n  &.large {\r\n    font-size: 1.2em;\r\n  }\r\n}\r\n",
                    "styleUrl": "input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "changeDetection",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "changeDetection",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"input-field-wrapper {{ options.size }}\" data-testid=\"inputComponent\">\r\n\t<input\r\n\t\t#input\r\n\t\ttype=\"text\"\r\n\t\t[attr.placeholder]=\"options.placeholder\"\r\n\t\t[attr.maxlength]=\"options.maxLength\"\r\n\t\t[attr.disabled]=\"isDisabled || null\"\r\n\t\t[value]=\"value\"\r\n\t\t(keyup)=\"modelChange(input.value)\"\r\n\t\t(focus)=\"onTouched?.()\" />\r\n\r\n\t<div *ngIf=\"value && !isDisabled\" class=\"value-dismiss ti-ux-close\" (click)=\"clearValue()\"></div>\r\n</div>\r\n"
        },
        {
            "name": "InputFieldComponent",
            "id": "component-InputFieldComponent-2736cfa420e28f437621153730576164cbf0b88bda7875218e4cb925e20bd991dc7bdb733f7d25ce96364595c897c38f516520ff91f71ad21cd4a403d8755f88",
            "file": "src/input-field/input-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pri-input-field",
            "styleUrls": [
                "./input-field.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-field.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "detailLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "detailUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "\"Please fill, it can't be empty\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "extraClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hasError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "help",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "option",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tag",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ccImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "detailEl",
                    "defaultValue": "ViewChild('detailEl')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'detailEl'"
                        }
                    ]
                },
                {
                    "name": "detailElVar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "dropdownEl",
                    "defaultValue": "ViewChild('dropdownEl')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dropdownEl'"
                        }
                    ]
                },
                {
                    "name": "elementType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "extraStyles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "mainEl",
                    "defaultValue": "ViewChild('mainEl')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'mainEl'"
                        }
                    ]
                },
                {
                    "name": "mainExtraStyles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "printedValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "selectedOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectEl",
                    "defaultValue": "ViewChild('selectEl')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'selectEl'"
                        }
                    ]
                },
                {
                    "name": "selectIsOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "selectStyles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "tagEl",
                    "defaultValue": "ViewChild('tagEl')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tagEl'"
                        }
                    ]
                },
                {
                    "name": "tagElVar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "wrapperEl",
                    "defaultValue": "ViewChild('wrapperEl')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'wrapperEl'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeValue",
                    "args": [
                        {
                            "name": "difference",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 315,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "difference",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 310,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "creditCardType",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "formatFieldInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'creditCard'"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 290,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'creditCard'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatValue",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 250,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reformatField",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 305,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setExtraStyles",
                    "args": [
                        {
                            "name": "fromOnChanges",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fromOnChanges",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSelectOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateSelectedOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewChecked, AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'pri-input-field',\n  templateUrl: './input-field.component.html',\n  styleUrls: ['./input-field.component.scss']\n})\nexport class InputFieldComponent implements AfterViewChecked, AfterViewInit, OnChanges {\n\n  extraStyles: {};\n  mainExtraStyles: {};\n  selectStyles: {};\n  printedValue: string;\n  ccImage: string;\n  selectIsOpen: boolean;\n  selectedOption: any;\n  tagElVar: ElementRef;\n  detailElVar: ElementRef;\n  elementType: string;\n\n  @Input() id = '';\n  @Input() value = '';\n  @Input() label = '';\n  @Input() placeholder = '';\n  @Input() extraClasses = '';\n  @Input() description = '';\n  @Input() help = '';\n  @Input() tag = '';\n  @Input() icon = '';\n  @Input() image = '';\n  @Input() isDisabled = false;\n  @Input() hasError = false;\n  @Input() errorMessage = \"Please fill, it can't be empty\";\n  @Input() detailLabel = '';\n  @Input() detailUrl = '';\n  @Input() options: any[] = []; // Format: [{value: 'passport', label: 'Passport', image: 'path/to/image.svg', selected: true|false}]\n  @Input() option = '';\n  @Input() min = 0;\n  @Input() max = 99999999999;\n  @Input() type = 'text'; // text | file | number | numberSecondary | password | creditCard | phone\n  @Input() size = 'regular'; // small | regular | large\n\n  constructor(private cd: ChangeDetectorRef) {\n    this.extraStyles = {};\n    this.mainExtraStyles = {};\n    this.selectStyles = {};\n    this.printedValue = this.value;\n    this.ccImage = \"\";\n    this.selectIsOpen = false;\n    this.selectedOption = { value: '', label: '', image: '' };\n    this.tagElVar = this.tagEl;\n    this.detailElVar = this.detailEl;\n    this.elementType = this.type;\n\n    this.creditCardType();\n  }\n\n  @ViewChild('mainEl')\n  mainEl: ElementRef = ViewChild('mainEl');\n\n  @ViewChild('wrapperEl')\n  wrapperEl: ElementRef = ViewChild('wrapperEl');\n\n  @ViewChild('detailEl')\n  detailEl: ElementRef = ViewChild('detailEl');\n\n  @ViewChild('tagEl')\n  tagEl: ElementRef = ViewChild('tagEl');\n\n  @ViewChild('selectEl')\n  selectEl: ElementRef = ViewChild('selectEl');\n\n  @ViewChild('dropdownEl')\n  dropdownEl: ElementRef = ViewChild('dropdownEl');\n\n  ngOnChanges() {\n    this.updateSelectedOptions();\n    this.setExtraStyles();\n  }\n\n  ngAfterViewInit() {\n    this.setExtraStyles();\n    this.elementType = this.type != 'numberSecondary' ? this.type : 'number';\n\n    if (this.type == 'number')\n      this.value = parseFloat(this.value).toFixed(2);\n\n    if (this.type == 'creditCard' || this.type == 'phone')\n      this.formatValue(this.type);\n  }\n\n  ngAfterViewChecked() {\n    this.setExtraStyles(true);\n  }\n\n  setExtraStyles(fromOnChanges: boolean = false): void {\n    // Add styles if the field has a detail's link\n    if (this.detailLabel && (typeof this.detailEl == 'object' || typeof this.detailElVar == 'object')) {\n      if (typeof this.detailElVar != 'object')\n        this.detailElVar = this.detailEl;\n\n      let extraPadding = 18;\n\n      if (this.size == 'small') {\n        extraPadding = 14;\n      }\n\n      let detailWidth = this.detailElVar.nativeElement.offsetWidth + extraPadding;\n\n      this.extraStyles = {\n        ...this.extraStyles,\n        'padding-right': detailWidth + 'px'\n      };\n    }\n\n    // Add styles if the field has a tag\n    if (this.tag && (typeof this.tagEl == 'object' || typeof this.tagElVar == 'object')) {\n      if (typeof this.tagElVar != 'object')\n        this.tagElVar = this.tagEl;\n\n      let extraPadding = 12;\n\n      if (this.size == 'small') {\n        extraPadding = 8;\n      }\n\n      let tagWidth = this.tagElVar.nativeElement.offsetWidth + extraPadding;\n\n      this.extraStyles = {\n        ...this.extraStyles,\n        'padding-left': tagWidth + 'px'\n      };\n    }\n\n    // Add styles if the field has options\n    // Assign the \"selected\" attribute if an option is selected\n    if (this.options.length && typeof this.selectEl == 'object') {\n      let extraPadding = 12;\n\n      if (this.size == 'small') {\n        extraPadding = 8;\n      }\n\n      let selectPadding = this.selectEl.nativeElement.offsetWidth + extraPadding;\n\n      this.extraStyles = {\n        ...this.extraStyles,\n        'padding-left': selectPadding + 'px'\n      };\n    }\n\n    if (typeof this.wrapperEl == 'object') {\n      let mainWidth = this.wrapperEl.nativeElement.offsetWidth;\n\n      this.mainExtraStyles = {\n        ...this.mainExtraStyles,\n        'width': mainWidth + 'px'\n      };\n    }\n\n    if (!fromOnChanges)\n      setTimeout(() => this.cd.detectChanges(), 100);\n  }\n\n  // Update the selected option when it changes\n  updateSelectedOptions() {\n    if (this.options.length) {\n      let selectedOptions = 0;\n      this.options.forEach((option, key) => {\n        if (option.value == this.option) {\n          this.options[key] = {\n            ...this.options[key],\n            selected: true\n          }\n\n          this.selectedOption = { value: this.options[key].value, label: this.options[key].label, image: this.options[key].image };\n\n          selectedOptions++;\n        } else {\n          this.options[key] = {\n            ...this.options[key],\n            selected: false\n          }\n        }\n      });\n\n      if (!selectedOptions) {\n        this.selectedOption = { value: this.options[0].value, label: this.options[0].label, image: this.options[0].image };\n      }\n    }\n  }\n\n  // Toggle wether the select is open or closed\n  toggleSelectOpen() {\n    this.selectIsOpen = !this.selectIsOpen;\n  }\n\n  // Select a value when clicking on it\n  selectValue(value: string) {\n    this.option = value;\n    this.updateSelectedOptions();\n    this.toggleSelectOpen();\n    this.setExtraStyles();\n  }\n\n  // Return what credit card type the passed string is\n  // https://stackoverflow.com/questions/5911236/identify-card-type-from-card-number\n  creditCardType(): void {\n    // visa\n    var re = new RegExp(\"^4\");\n    if (this.value.match(re) != null)\n      this.ccImage = \"VISA\";\n\n    // Mastercard \n    // Updated for Mastercard 2017 BINs expansion\n    if (/^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/.test(this.value))\n      this.ccImage = \"MASTERCARD\";\n\n    // AMEX\n    re = new RegExp(\"^3[47]\");\n    if (this.value.match(re) != null)\n      this.ccImage = \"AMEX\";\n\n    // Discover\n    re = new RegExp(\"^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)\");\n    if (this.value.match(re) != null)\n      this.ccImage = \"DISCOVER\";\n\n    // Diners\n    re = new RegExp(\"^36\");\n    if (this.value.match(re) != null)\n      this.ccImage = \"DINERS\";\n\n    // Diners - Carte Blanche\n    re = new RegExp(\"^30[0-5]\");\n    if (this.value.match(re) != null)\n      this.ccImage = \"DINERS\";\n\n    // JCB\n    re = new RegExp(\"^35(2[89]|[3-8][0-9])\");\n    if (this.value.match(re) != null)\n      this.ccImage = \"JCB\";\n\n    // Visa Electron\n    re = new RegExp(\"^(4026|417500|4508|4844|491(3|7))\");\n    if (this.value.match(re) != null)\n      this.ccImage = \"VISA_ELECTRON\";\n  }\n\n  formatValue(type: string) {\n\n    let charNumber = 4;\n\n    switch (type) {\n      case 'creditCard':\n        charNumber = 4;\n        break;\n      case 'phone':\n        charNumber = 3;\n        break;\n      default:\n        charNumber = 4;\n        break;\n    }\n\n    if (!this.printedValue) {\n      this.printedValue = this.value;\n    }\n\n    var v = this.printedValue.replace(/\\s+/g, '').replace(/[^0-9]/gi, '')\n    var matches = v.match(/\\d{4,18}/g);\n    var match = matches && matches[0] || ''\n    var parts = []\n\n    for (let i = 0, len = match.length; i < len; i += charNumber) {\n      parts.push(match.substring(i, i + charNumber))\n    }\n\n    if (parts.length) {\n      this.printedValue = parts.join(' ')\n    } else {\n      this.printedValue = this.printedValue;\n    }\n\n    this.creditCardType();\n    this.reformatField();\n  }\n\n  // Format the CC number that is inserted in the input\n  formatFieldInput(event: { which: any; keyCode: any; }, type: string = 'creditCard') {\n    var code = (event.which) ? event.which : event.keyCode;\n\n    this.reformatField();\n\n    if ((code < 48 || code > 57) && (code > 31)) {\n      return false;\n    }\n\n    this.formatValue(type);\n\n    return true;\n  }\n\n  // Remove the spaces from the inserted CC number\n  reformatField() {\n    this.value = this.printedValue.replace(/\\s/g, '');\n  }\n\n  // Clear the value variable\n  clearValue() {\n    this.value = \"\";\n  }\n\n  // Change the value according to the passed number\n  changeValue(difference: number = 0) {\n    if (this.elementType == \"number\") {\n      let newValue = Number(this.value) + difference;\n\n      if (isNaN(newValue))\n        newValue = difference;\n\n      if (newValue <= this.max && newValue >= this.min)\n        this.value = String(newValue);\n      else if (newValue > this.max)\n        this.value = String(this.max);\n      else if (newValue < this.min)\n        this.value = String(this.min);\n\n      if (this.type == \"number\")\n        this.value = parseFloat(this.value).toFixed(2);\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input-field{\r\n    width: 300px;\r\n\r\n    label{\r\n        display: block;\r\n        margin-bottom: 4px;\r\n        width: fit-content;\r\n        font-size: 14px;\r\n        line-height: 19px;\r\n        color: var(--grey-7);\r\n\r\n        & > i{\r\n            position: relative;\r\n            top: 2px;\r\n            font-size: 16px;\r\n\r\n            .help{\r\n                position: absolute;\r\n                left: calc(100% + 8px);\r\n                padding: 4px 6px;\r\n                width: 100px;\r\n                font-size: 12px;\r\n                line-height: 12px;\r\n                letter-spacing: 0.24px;\r\n                color: var(--grey-1);\r\n                background-color: var(--grey-8);\r\n                border-radius: 4px;\r\n                box-sizing: border-box;\r\n                opacity: 0;\r\n                visibility: hidden;\r\n                transition: opacity 0.3s;\r\n                z-index: 1;\r\n            }\r\n\r\n            &:hover{\r\n                color: var(--grey-8);\r\n                \r\n                .help{\r\n                    opacity: 1;\r\n                    visibility: visible;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .input-field-wrapper{\r\n        position: relative;\r\n        display: inline-block;\r\n        width: 100%;\r\n\r\n        input{\r\n            padding: 8px 12px;\r\n            width: 100%;\r\n            font-size: 14px;\r\n            line-height: 19px;\r\n            color: var(--grey-8);\r\n            background-color: var(--grey-1);\r\n            border: 1px solid var(--grey-4);\r\n            border-radius: 4px;\r\n            box-sizing: border-box;\r\n            transition: all 0.3s;\r\n\r\n            &::placeholder{\r\n                color: var(--grey-6);\r\n            }\r\n\r\n            &:hover:not(:disabled):not(.error){\r\n                border-color: var(--grey-5);\r\n            }\r\n\r\n            &:focus,\r\n            &:focus-visible{\r\n                outline: none;\r\n                border-color: var(--theme-100) !important;\r\n            }\r\n\r\n            &:disabled{\r\n                color: var(--grey-6);\r\n                background-color: var(--grey-3);\r\n                pointer-events: none;\r\n            }\r\n\r\n            &.error{\r\n                border-color: var(--error-100);\r\n\r\n                &.error-clear{\r\n                    padding-right: 25px;\r\n                }\r\n            }\r\n\r\n            &.credit-card,\r\n            &.icon,\r\n            &.image{\r\n                padding-left: 41px;\r\n            }\r\n\r\n            &[type='file']{\r\n                overflow: hidden;\r\n                padding-left: 45px;\r\n                cursor: pointer;\r\n\r\n                &::file-selector-button{\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            &[type='number']{\r\n                padding-right: 32px;\r\n                width: 150px;\r\n                text-align: right;\r\n                -moz-appearance: textfield;\r\n\r\n                &::-webkit-outer-spin-button,\r\n                &::-webkit-inner-spin-button{\r\n                    -webkit-appearance: none;\r\n                    margin: 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        &.file{\r\n\r\n            &:before{\r\n                content: \"\\e908\";\r\n                position: absolute;\r\n                top: 1px;\r\n                left: 1px;\r\n                padding: 7px 11px;\r\n                height: calc(100% - 2px);\r\n                font-family: 'pollen';\r\n                font-size: 16px;\r\n                color: var(--grey-7);\r\n                background-color: var(--grey-4);\r\n                border-radius: 2px 0 0 2px;\r\n                box-sizing: border-box;\r\n                transition: background-color 0.3s, color 0.3s;\r\n                pointer-events: none;\r\n            }\r\n\r\n            &:hover:not(:disabled),\r\n            &:active:not(:disabled){\r\n                &:before{\r\n                    background-color: var(--theme-20);\r\n                    color: var(--grey-8);\r\n                }\r\n            }\r\n        }\r\n\r\n        &.number,\r\n        &.numberSecondary{\r\n            width: 150px;\r\n\r\n            &.numberSecondary{\r\n\r\n                input{\r\n                    text-align: center;\r\n                }\r\n            }\r\n        }\r\n\r\n        .error-dismiss{\r\n            position: absolute;\r\n            top: 12px;\r\n            right: 9px;\r\n            font-size: 12px;\r\n            color: var(--error-100);\r\n            cursor: pointer;\r\n        }\r\n\r\n        a.input-detail{\r\n            display: block;\r\n            position: absolute;\r\n            top: 9px;\r\n            right: 12px;\r\n            font-size: 14px;\r\n            line-height: 19px;\r\n            color: var(--theme-100);\r\n            text-decoration: none;\r\n\r\n            &:hover{\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n\r\n        .tag{\r\n            position: absolute;\r\n            top: 6px;\r\n            left: 6px;\r\n            padding: 3px 4px;\r\n            font-size: 14px;\r\n            line-height: 19px;\r\n            color: var(--grey-7);\r\n            background-color: var(--grey-3);\r\n            border-radius: 4px;\r\n\r\n            &.disabled{\r\n                color: var(--grey-7) !important;\r\n                background-color: var(--grey-1) !important;\r\n            }\r\n        }\r\n\r\n        .field-icon{\r\n            position: absolute;\r\n            top: 8px;\r\n            left: 12px;\r\n            font-size: 20px;\r\n            color: var(--grey-7);\r\n\r\n            img{\r\n                position: relative;\r\n                top: -3px;\r\n                width: 20px;\r\n                vertical-align: middle;\r\n                pointer-events: none;\r\n            }\r\n        }\r\n\r\n        .select{\r\n            position: absolute;\r\n            top: 6px;\r\n            left: 6px;\r\n            width: fit-content;\r\n\r\n            & > div:not(.dropdown){\r\n                position: relative;\r\n                display: flex;\r\n                align-items: center;\r\n                gap: 6px;\r\n                padding: 3px 24px 3px 4px;\r\n                width: fit-content;\r\n                font-size: 14px;\r\n                line-height: 19px;\r\n                color: var(--grey-7);\r\n                background-color: var(--grey-3);\r\n                border: 0;\r\n                border-radius: 4px;\r\n                box-sizing: border-box;\r\n                cursor: pointer;\r\n                transition: background-color 0.3s;\r\n\r\n                &:before{\r\n                    content: \"\\e64b\";\r\n                    position: absolute;\r\n                    top: 3px;\r\n                    right: 4px;\r\n                    font-family: 'pollen';\r\n                    font-size: 12px;\r\n                    color: var(--grey-7);\r\n                }\r\n\r\n                &:hover{\r\n                    background-color: var(--grey-4);\r\n                }\r\n            }\r\n\r\n            .dropdown{\r\n                position: relative;\r\n                top: 9px;\r\n                padding: 8px;\r\n                width: fit-content;\r\n                background-color: var(--grey-1);\r\n                border: 1px solid var(--grey-4);\r\n                border-radius: 4px;\r\n                opacity: 0;\r\n                visibility: hidden;\r\n                z-index: 1;\r\n                transition: opacity 0.3s;\r\n\r\n                .option{\r\n                    display: flex;\r\n                    flex-wrap: nowrap;\r\n                    align-items: center;\r\n                    gap: 6px;\r\n                    padding: 4px 0;\r\n                    font-size: 14px;\r\n                    line-height: 19px;\r\n                    color: var(--grey-7);\r\n                    cursor: pointer;\r\n                    transition: color 0.4s;\r\n\r\n                    &:hover,\r\n                    &.selected{\r\n                        color: var(--grey-8);\r\n                    }\r\n                }\r\n            }\r\n\r\n            img{\r\n                height: 18px;\r\n                width: 24px;\r\n            }\r\n\r\n            select{\r\n                display: none;\r\n            }\r\n\r\n            &.open{\r\n\r\n                & > div:not(.dropdown){\r\n\r\n                    &:before{\r\n                        content: \"\\e648\";\r\n                    }\r\n                }\r\n\r\n                .dropdown{\r\n                    opacity: 1;\r\n                    visibility: visible;\r\n                }\r\n            }\r\n        }\r\n\r\n        .number-controls{\r\n            position: absolute;\r\n            top: 8px;\r\n            right: 8px;\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: 2px;\r\n            font-size: 10px;\r\n            color: var(--grey-8);\r\n            transition: all 0.3s;\r\n\r\n            & > div{\r\n                cursor: pointer;\r\n                transition: all 0.3s;\r\n\r\n                &.disabled{\r\n                    color: var(--grey-6);\r\n                    pointer-events: none;\r\n                }\r\n            }\r\n\r\n            &.disabled{\r\n\r\n                & > div{\r\n                    color: var(--grey-6) !important;\r\n                    pointer-events: none;\r\n                }\r\n            }\r\n        }\r\n\r\n        &.numberSecondary{\r\n\r\n            input{\r\n                padding-right: 34px;\r\n                padding-left: 34px;\r\n            }\r\n\r\n            .number-controls{\r\n                top: 0;\r\n                right: unset;\r\n                left: 0;\r\n                display: block;\r\n                width: 100%;\r\n                font-size: 12px;\r\n                color: var(--theme-100);\r\n\r\n                & > div{\r\n                    position: absolute;\r\n                    top: 7px;\r\n                    right: 6px;\r\n                    height: 22px;\r\n                    width: 22px;\r\n                    color: var(--theme-100);\r\n                    line-height: 22px;\r\n                    text-align: center;\r\n                    background-color: var(--theme-20);\r\n                    border-radius: 4px;\r\n                    cursor: pointer;\r\n\r\n                    &.value-down{\r\n                        right: unset;\r\n                        left: 6px;\r\n                    }\r\n\r\n                    &.disabled{\r\n                        color: var(--grey-7);\r\n                        background-color: var(--grey-3);\r\n                        pointer-events: none;\r\n                    }\r\n                }\r\n\r\n                &.disabled{\r\n                    \r\n                    & > div{\r\n                        color: var(--grey-6) !important;\r\n                        background-color: var(--grey-1) !important;\r\n                        pointer-events: none;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .error-message{\r\n        margin-top: 2px;\r\n        font-size: 12px;\r\n        line-height: 16px;\r\n        color: var(--grey-8);\r\n    }\r\n\r\n    .description{\r\n        padding-top: 4px;\r\n        font-size: 12px;\r\n        line-height: 16px;\r\n        color: var(--grey-7);\r\n    }\r\n\r\n    &.small{\r\n\r\n        label{\r\n            font-size: 12px;\r\n            line-height: 16px;\r\n\r\n            & > i{\r\n                top: 1px;\r\n                font-size: 12px;\r\n            }\r\n        }\r\n\r\n        .input-field-wrapper{\r\n\r\n            input{\r\n                padding: 4px 8px;\r\n                font-size: 12px;\r\n                line-height: 16px;\r\n\r\n                &.credit-card,\r\n                &.icon,\r\n                &.image{\r\n                    padding-left: 30px;\r\n                }\r\n\r\n                &[type='file']{\r\n                    padding-left: 40px;\r\n                }\r\n\r\n                &.error-clear{\r\n                    padding-right: 25px;\r\n                }\r\n            }\r\n\r\n            .error-dismiss{\r\n                top: 7px;\r\n            }\r\n\r\n            .tag{\r\n                top: 4px;\r\n                left: 4px;\r\n                padding: 1px 4px;\r\n                font-size: 12px;\r\n                line-height: 16px;\r\n            }\r\n\r\n            .input-detail{\r\n                top: 5px;\r\n                right: 8px;\r\n                font-size: 12px;\r\n                line-height: 16px;\r\n            }\r\n\r\n            .field-icon{\r\n                top: 5px;\r\n                left: 8px;\r\n                font-size: 16px;\r\n\r\n                img{\r\n                    width: 16px;\r\n                }\r\n            }\r\n\r\n            .select{\r\n                top: 4px;\r\n                left: 4px;\r\n\r\n                & > div:not(.dropdown){\r\n                    font-size: 12px;\r\n                    line-height: 16px;\r\n                    gap: 4px;\r\n                    padding: 1px 20px 1px 4px;\r\n\r\n                    &:before{\r\n                        top: 2px;\r\n                        font-size: 8px;\r\n                    }\r\n                }\r\n\r\n                .dropdown{\r\n                    top: 7px;\r\n\r\n                    .option{\r\n                        font-size: 12px;\r\n                        line-height: 16px;\r\n                    }\r\n                }\r\n\r\n                img{\r\n                    height: 12px;\r\n                }\r\n            }\r\n\r\n            &.file{\r\n\r\n                &:before{\r\n                    padding: 5px 10px;\r\n                    font-size: 12px;\r\n                }\r\n            }\r\n\r\n            &.numberSecondary{\r\n\r\n                input{\r\n                    padding: 4px 26px;\r\n                }\r\n\r\n                .number-controls{\r\n                    font-size: 8px;\r\n\r\n                    & > div{\r\n                        top: 5px;\r\n                        right: 5px;\r\n                        height: 16px;\r\n                        width: 16px;\r\n                        line-height: 16px;\r\n\r\n                        &.value-down{\r\n                            left: 5px;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            &.number{\r\n\r\n                input{\r\n                    padding-right: 18px;\r\n                }\r\n\r\n                .number-controls{\r\n                    top: 5px;\r\n                    right: 5px;\r\n                    gap: 0;\r\n                    font-size: 8px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .description,\r\n        .error-message{\r\n            font-size: 10px;\r\n            line-height: 13px;\r\n        }\r\n    }\r\n\r\n    &.large{\r\n\r\n        label{\r\n            font-size: 16px;\r\n            line-height: 21px;\r\n\r\n            & > i{\r\n\r\n                .help{\r\n                    padding: 8px;\r\n                    width: 120px;\r\n                    font-size: 14px;\r\n                    line-height: 12px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .input-field-wrapper{\r\n            input{\r\n                padding: 12px 16px;\r\n                font-size: 16px;\r\n                line-height: 21px;\r\n\r\n                &.credit-card,\r\n                &.icon,\r\n                &.image{\r\n                    padding-left: 52px;\r\n                }\r\n\r\n                &[type='file']{\r\n                    padding-left: 60px;\r\n                }\r\n\r\n                &.error-clear{\r\n                    padding-right: 35px;\r\n                }\r\n            }\r\n\r\n            .error-dismiss{\r\n                top: 15px;\r\n                right: 12px;\r\n                font-size: 16px;\r\n            }\r\n\r\n            .tag{\r\n                top: 8px;\r\n                left: 8px;\r\n                padding: 4px 8px;\r\n                font-size: 16px;\r\n                line-height: 21px;\r\n            }\r\n\r\n            .input-detail{\r\n                top: 12px;\r\n                right: 16px;\r\n                font-size: 16px;\r\n                line-height: 21px;\r\n            }\r\n\r\n            .field-icon{\r\n                top: 11px;\r\n                left: 16px;\r\n                font-size: 24px;\r\n\r\n                img{\r\n                    top: -5px;\r\n                    width: 24px;\r\n                }\r\n            }\r\n\r\n            .select{\r\n                top: 8px;\r\n                left: 8px;\r\n\r\n                & > div:not(.dropdown){\r\n                    font-size: 16px;\r\n                    line-height: 21px;\r\n                    gap: 8px;\r\n                    padding: 4px 28px 4px 8px;\r\n\r\n                    &:before{\r\n                        top: 5px;\r\n                        right: 8px;\r\n                        font-size: 12px;\r\n                    }\r\n                }\r\n\r\n                .dropdown{\r\n                    top: 13px;\r\n\r\n                    .option{\r\n                        font-size: 16px;\r\n                        line-height: 21px;\r\n                    }\r\n                }\r\n\r\n                img{\r\n                    height: 20px;\r\n                }\r\n            }\r\n\r\n            &.file{\r\n\r\n                &:before{\r\n                    padding: 10px 14px;\r\n                    font-size: 20px;\r\n                }\r\n            }\r\n\r\n            &.numberSecondary{\r\n\r\n                input{\r\n                    padding-left: 42px;\r\n                    padding-right: 42px;\r\n                }\r\n\r\n                .number-controls{\r\n                    font-size: 16px;\r\n\r\n                    & > div{\r\n                        top: 8px;\r\n                        right: 8px;\r\n                        height: 30px;\r\n                        width: 30px;\r\n                        line-height: 30px;\r\n\r\n                        &.value-down{\r\n                            left: 8px;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            &.number{\r\n\r\n                input{\r\n                    padding-right: 32px;\r\n                }\r\n\r\n                .number-controls{\r\n                    top: 11px;\r\n                    right: 10px;\r\n                    gap: 0;\r\n                    font-size: 12px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./input-field.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewChecked",
                "AfterViewInit",
                "OnChanges"
            ],
            "templateData": "<div #mainEl class=\"input-field {{size}} {{extraClasses}}\" [ngStyle]=\"mainExtraStyles\">\r\n    <label *ngIf=\"label\" for=\"{{id}}\">\r\n        {{label}}\r\n        <i *ngIf=\"help\" class=\"ti-ux-help-outline\">\r\n            <span class=\"help\">{{help}}</span>\r\n        </i>\r\n    </label>\r\n\r\n    <div #wrapperEl class=\"input-field-wrapper {{type}}\">\r\n        <input  *ngIf=\"type != 'creditCard' && type != 'phone'\" \r\n                type=\"{{elementType}}\" \r\n                placeholder=\"{{placeholder}}\"\r\n                [(ngModel)]=\"value\" \r\n                id=\"{{id}}\" \r\n                name=\"{{id}}\" \r\n                [attr.disabled]=\"isDisabled ? '' : null\" \r\n                [class.icon]=\"icon\" \r\n                [class.image]=\"image\" \r\n                [class.error]=\"hasError\"\r\n                [class.error-clear]=\"value && elementType != 'number'\" \r\n                [class.has-detail]=\"detailLabel\" \r\n                [ngStyle]=\"extraStyles\"\r\n                min=\"{{min}}\"\r\n                max=\"{{max}}\"\r\n                (change)=\"changeValue()\" />\r\n\r\n        <input  *ngIf=\"type == 'creditCard' || type == 'phone'\" \r\n                type=\"text\" \r\n                placeholder=\"{{placeholder}}\"\r\n                [(ngModel)]=\"printedValue\" \r\n                id=\"{{id}}\" \r\n                name=\"{{id}}\" \r\n                [attr.disabled]=\"isDisabled ? '' : null\"\r\n                class=\"{{type}}\"\r\n                [class.credit-card]=\"type == 'creditCard'\" \r\n                [class.error]=\"hasError\" \r\n                [class.error-clear]=\"value\"\r\n                [ngStyle]=\"extraStyles\" \r\n                (keypress)=\"formatFieldInput($event, type)\" \r\n                (blur)=\"reformatField()\" />\r\n\r\n        <div *ngIf=\"hasError && value && type != 'file' && elementType != 'number'\" class=\"error-dismiss ti-ux-close\" (click)=\"clearValue()\"></div>\r\n        <a #detailEl *ngIf=\"!hasError && detailLabel\" class=\"input-detail\" href=\"{{detailUrl}}\">{{detailLabel}}</a>\r\n        <div #tagEl *ngIf=\"tag && !options.length && type != 'numberSecondary' && !icon\" class=\"tag\"  [class.disabled]=\"isDisabled\">{{tag}}</div>\r\n\r\n        <div class=\"select\" *ngIf=\"options.length\" [class.open]=\"selectIsOpen\">\r\n            <div #selectEl [attr.data-value]=\"selectedOption.value\" (click)=\"toggleSelectOpen()\" [ngStyle]=\"selectStyles\">\r\n                <img *ngIf=\"selectedOption.image\" src=\"{{selectedOption.image}}\" />\r\n                {{selectedOption.label}}\r\n            </div>\r\n            <div #dropdownEl class=\"dropdown\">\r\n                <div class=\"option\" *ngFor=\"let option of options\" [class.selected]=\"option.selected\"\r\n                    (click)=\"selectValue(option.value)\">\r\n                    <img *ngIf=\"option.image\" src=\"{{option.image}}\" />\r\n                    {{option.label}}\r\n                </div>\r\n            </div>\r\n            <select>\r\n                <option *ngFor=\"let option of options\" value=\"{{option.value}}\"\r\n                    [attr.selected]=\"option.selected ? '' : null\">\r\n                    {{option.label}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n\r\n        <div *ngIf=\"type == 'creditCard'\" class=\"field-icon\" [class.ti-ux-expenses-outline]=\"!ccImage\">\r\n            <img *ngIf=\"ccImage\" src=\"./assets/ccImages/{{ccImage}}.svg\" />\r\n        </div>\r\n\r\n        <div *ngIf=\"(icon || image) && type != 'creditCard' && type != 'numberSecondary'\" class=\"field-icon {{icon}}\">\r\n            <img *ngIf=\"image\" src=\"{{image}}\" />\r\n        </div>\r\n\r\n        <div *ngIf=\"type == 'number' || type == 'numberSecondary'\" class=\"number-controls\"  [class.disabled]=\"isDisabled\">\r\n            <div    class=\"value-up\" \r\n                    [class.ti-ux-chevron-up]=\"type == 'number'\"\r\n                    [class.ti-ux-add]=\"type == 'numberSecondary'\"\r\n                    [class.disabled]=\"+value >= max\"\r\n                    (pointerdown)=\"changeValue(1)\"></div>\r\n\r\n            <div    class=\"value-down\" \r\n                    [class.ti-ux-chevron-down]=\"type == 'number'\"\r\n                    [class.ti-ux-line]=\"type == 'numberSecondary'\"\r\n                    [class.disabled]=\"+value <= min\"\r\n                    (pointerdown)=\"changeValue(-1)\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"description\" class=\"description\">{{description}}</div>\r\n    <div *ngIf=\"hasError\" class=\"error-message\">{{errorMessage}}</div>\r\n</div>"
        },
        {
            "name": "InputNumberComponent",
            "id": "component-InputNumberComponent-2a7d9ba6e44b3bda7a5ceea4e7e2040a031838104ce51bc7f526ce406d8f21af61de59ad082879e477e130afcd940c9f0613ba843b91ff421f9cab396659d6ee",
            "file": "src/input-number/input-number.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pri-input-number",
            "styleUrls": [
                "./input-number.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-number.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "\"Please fill, it can't be empty\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "extraClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hasError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "help",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "99999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tag",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'number'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pri-input-number',\n  templateUrl: './input-number.component.html',\n  styleUrls: ['./input-number.component.scss']\n})\nexport class InputNumberComponent implements OnInit {\n\n  @Input() id = '';\n  @Input() value = '';\n  @Input() label = '';\n  @Input() placeholder = '';\n  @Input() extraClasses = '';\n  @Input() help = '';\n  @Input() tag = '';\n  @Input() icon = '';\n  @Input() isDisabled = false;\n  @Input() hasError = false;\n  @Input() errorMessage = \"Please fill, it can't be empty\";\n  @Input() min = 0;\n  @Input() max = 99999999999;\n  @Input() type = 'number'; // number | numberSecondary\n  @Input() size = 'regular'; // small | regular | large\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./input-number.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<pri-input-field    type=\"{{type}}\" \n                    tag=\"{{tag}}\"\n                    placeholder=\"{{placeholder}}\"\n                    value=\"{{value}}\"\n                    label=\"{{label}}\"\n                    extraClasses=\"{{extraClasses}}\"\n                    help=\"{{help}}\"\n                    icon=\"{{icon}}\"\n                    [isDisabled]=\"isDisabled\"\n                    [hasError]=\"hasError\"\n                    errorMessage=\"{{errorMessage}}\"\n                    [min]=\"min\"\n                    [max]=\"max\"\n                    tag=\"{{tag}}\"\n                    size=\"{{size}}\"></pri-input-field>"
        },
        {
            "name": "RadioButtonGroupComponent",
            "id": "component-RadioButtonGroupComponent-cb9b0a19a1e7b948318dedf71a534f2b213d99bc17df3c359bb275f63e695fff3c26e8cbfae9bf5fb0d447321a50325bcaaa81a6ebe56383eec6d625462c30bb",
            "file": "src/radio-button-group/radio-button-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pri-radio-button-group",
            "styleUrls": [
                "radio-button-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "radio-button-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "layout",
                    "defaultValue": "'horizontal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "\"horizontal\" | \"vertical\"",
                    "decorators": []
                },
                {
                    "name": "model",
                    "defaultValue": "new Array<IRadioButtonGroup<Value>>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "Array<IRadioButtonGroup<Value>>",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "new RadioButtonGroupOptions()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "RadioButtonGroupOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<IRadioButtonGroup<Value>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter<IRadioButtonGroup<Value>>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "radioSelected",
                    "defaultValue": "new IRadioButtonGroup<Value>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IRadioButtonGroup<Value>",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRadioChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setSelectedRadio",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n\tChangeDetectionStrategy,\n\tComponent,\n\tEventEmitter, Input,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IRadioButtonGroup } from './interfaces/radio-button-group.interface';\nimport { RadioButtonGroupOptions } from './options/radio-button-group.options';\n\n@Component({\n\tselector: 'pri-radio-button-group',\n\ttemplateUrl: 'radio-button-group.component.html',\n\tstyleUrls: ['radio-button-group.component.scss'],\n\tencapsulation: ViewEncapsulation.None,\n\timports: [CommonModule, FormsModule],\n\tstandalone: true,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RadioButtonGroupComponent<Value = string> implements OnInit, OnChanges {\n\t@Input() options: RadioButtonGroupOptions = new RadioButtonGroupOptions();\n\t@Input() model: Array<IRadioButtonGroup<Value>> = new Array<IRadioButtonGroup<Value>>;\n\t@Input() layout: 'horizontal' | 'vertical' = 'horizontal';\n\n\t@Output() valueChange: EventEmitter<IRadioButtonGroup<Value>> = new EventEmitter<IRadioButtonGroup<Value>>();\n\n\tradioSelected: IRadioButtonGroup<Value> = new IRadioButtonGroup<Value>;\n\n\tngOnInit() {\n\t\tif (this.model?.length > 0) {\n\t\t\tthis.setSelectedRadio();\n\t\t\t// this.onRadioChange();\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.setSelectedRadio();\n\t}\n\n\tsetSelectedRadio() {\n\t\tthis.radioSelected = this.model.find((m) => m.selected) || this.model[0];\n\t}\n\n\tonRadioChange() {\n\t\t// this.valueChange.emit(this.radioSelected);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "pri-radio-button-group {\r\n  .radio-button-group-wrapper {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-end;\r\n\r\n    .radio-button-group {\r\n      margin-right: 1.2em;\r\n      display: flex;\r\n      height: 2.3em;\r\n\r\n      &:last-child {\r\n        margin-right: 0;\r\n      }\r\n\r\n      .radio-wrapper {\r\n        display: flex;\r\n        align-items: center;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        max-width: 240px;\r\n        color: var(--grey-8);\r\n\r\n        input[type=\"radio\"] {\r\n          position: absolute;\r\n          opacity: 0;\r\n          pointer-events: none;\r\n\r\n          + .radio-label {\r\n            cursor: pointer;\r\n            position: relative;\r\n            font-size: 1em;\r\n            gap: 0.45em;\r\n\r\n            & > i {\r\n              font-size: 1.45em;\r\n              color: var(--grey-8);\r\n            }\r\n\r\n            & > img {\r\n              height: 1.45em;\r\n            }\r\n\r\n            &:before {\r\n              content: \"\";\r\n              border-radius: 100%;\r\n              width: 1.4em;\r\n              height: 1.4em;\r\n              background: transparent;\r\n              border: 1px solid var(--grey-5);\r\n              box-sizing: border-box;\r\n            }\r\n\r\n            &:after {\r\n              content: \"\";\r\n              position: absolute;\r\n              border-radius: 100%;\r\n              width: 0.7em;\r\n              height: 0.7em;\r\n              left: 0.35em;\r\n              background: transparent;\r\n            }\r\n          }\r\n\r\n          &:disabled {\r\n            pointer-events: none;\r\n\r\n            + .radio-label {\r\n              &:before {\r\n                border-color: var(--grey-5);\r\n              }\r\n\r\n              &:after {\r\n                background-color: var(--grey-5);\r\n              }\r\n            }\r\n          }\r\n\r\n          &:checked {\r\n            + .radio-label {\r\n              &:before {\r\n                border-color: var(--theme-100);\r\n              }\r\n\r\n              & > span {\r\n                color: var(--grey-8);\r\n              }\r\n\r\n              &:after {\r\n                background-color: var(--theme-100);\r\n              }\r\n            }\r\n\r\n            &:disabled {\r\n              + .radio-label {\r\n                &:before {\r\n                  border-color: var(--theme-highlight);\r\n                }\r\n\r\n                & > span {\r\n                  color: var(--theme-highlight);\r\n                }\r\n\r\n                &:after {\r\n                  background-color: var(--theme-highlight);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        label {\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          display: flex;\r\n          align-items: center;\r\n          color: var(--grey-7);\r\n\r\n          &.disabled {\r\n            color: var(--grey-6);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &.vertical-layout {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n    }\r\n\r\n    &.small {\r\n      .radio-button-group {\r\n        .radio-wrapper {\r\n          input[type=\"radio\"] {\r\n            + .radio-label {\r\n              font-size: 0.95em;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &.large {\r\n      .radio-button-group {\r\n        .radio-wrapper {\r\n          input[type=\"radio\"] {\r\n            + .radio-label {\r\n              font-size: 1.2em;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "radio-button-group.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"radio-button-group-wrapper {{ layout }}-layout {{options.size}}\">\n\t<div class=\"radio-button-group\" *ngFor=\"let radioButton of model; let i = index\">\n\t\t<div class=\"radio-wrapper\">\n\t\t\t<input\n\t\t\t\tid=\"radio-{{ i }}\"\n\t\t\t\ttype=\"radio\"\n\t\t\t\t[value]=\"radioButton\"\n\t\t\t\t[disabled]=\"radioButton.disabled\"\n\t\t\t\t[(ngModel)]=\"radioSelected\"\n\t\t\t\t(change)=\"onRadioChange()\" />\n\t\t\t<label for=\"radio-{{ i }}\" class=\"radio-label\" [class.disabled]=\"radioButton.disabled\">\n\t\t\t\t<i *ngIf=\"radioButton.icon\" [class]=\"radioButton.icon\"></i>\n    \t\t\t<img *ngIf=\"radioButton.image\" [src]=\"radioButton.image\" />\n\t\t\t\t<span>{{ radioButton.description }}</span>\n\t\t\t</label>\n\t\t</div>\n\t</div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-5fba6a6455bc770ebc1c9129f9a43a48681ca01550ed8270f7b80dc313015536dc6c247f55346a3ee1b43cef7eb1e550c8466592dc8d084c5aa9df9d5df7191b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ButtonComponent } from 'src/button/button.component';\nimport { InputFieldComponent } from 'src/input-field/input-field.component';\nimport { CheckboxComponent } from '../checkbox';\nimport { InputNumberComponent } from '../input-number/input-number.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ButtonComponent,\n    InputFieldComponent,\n    InputNumberComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, CheckboxComponent],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "InputFieldComponent"
                        },
                        {
                            "name": "InputNumberComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CreditCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputNumber.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/RadioButtonGroup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "HelpMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Image",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Link",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PhoneNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateStories.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputNumber.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Select",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SelectWithImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Tag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputNumber.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputNumberComponent>",
                "defaultValue": "(args: InputNumberComponent) => ({\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputFieldComponent>",
                "defaultValue": "(args: InputFieldComponent) => ({\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/RadioButtonGroup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RadioButtonGroupComponent>",
                "defaultValue": "(\n  args: RadioButtonGroupComponent\n) => ({\n  props: args,\n})"
            },
            {
                "name": "TemplateStories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n  template: ` <div class='buttons-container'>\n                <pri-button\n                  url=\"#\"\n                  icon=\"${args.icon}\"\n                  text=\"${args.text}\"\n                  size=\"${args.size}\"\n                  type=\"primaryFilled\"\n                  color=\"${args.color}\"\n                  [count] = \"${args.count}\"\n                  [nextButton] = \"${args.nextButton}\"\n                  [isDisabled] = \"${args.isDisabled}\"\n                  [loading] = \"${args.loading}\"\n                  extraClasses=\"\"\n                  ></pri-button>\n\n                <pri-button\n                  url=\"#\"\n                  icon=\"${args.icon}\"\n                  text=\"${args.text}\"\n                  size=\"${args.size}\"\n                  type=\"primaryOutlined\"\n                  color=\"${args.color}\"\n                  [count] = \"${args.count}\"\n                  [nextButton] = \"${args.nextButton}\"\n                  [isDisabled] = \"${args.isDisabled}\"\n                  [loading] = \"${args.loading}\"\n                  extraClasses=\"\"\n                ></pri-button>\n\n                <pri-button\n                  url=\"#\"\n                  icon=\"${args.icon}\"\n                  text=\"${args.text}\"\n                  size=\"${args.size}\"\n                  type=\"secondaryFilled\"\n                  color=\"${args.color}\"\n                  [count] = \"${args.count}\"\n                  [nextButton] = \"${args.nextButton}\"\n                  [isDisabled] = \"${args.isDisabled}\"\n                  [loading] = \"${args.loading}\"\n                  extraClasses=\"\"\n                ></pri-button>\n\n                <pri-button\n                  url=\"#\"\n                  icon=\"${args.icon}\"\n                  text=\"${args.text}\"\n                  size=\"${args.size}\"\n                  type=\"secondaryOutlined\"\n                  color=\"${args.color}\"\n                  [count] = \"${args.count}\"\n                  [nextButton] = \"${args.nextButton}\"\n                  [isDisabled] = \"${args.isDisabled}\"\n                  [loading] = \"${args.loading}\"\n                  extraClasses=\"\"\n                ></pri-button>\n                \n                <pri-button\n                  url=\"#\"\n                  icon=\"${args.icon}\"\n                  text=\"${args.text}\"\n                  size=\"${args.size}\"\n                  type=\"tertiary\"\n                  color=\"${args.color}\"\n                  [count] = \"${args.count}\"\n                  [nextButton] = \"${args.nextButton}\"\n                  [isDisabled] = \"${args.isDisabled}\"\n                  [loading] = \"${args.loading}\"\n                  extraClasses=\"\"\n                ></pri-button>\n              </div>`\n})"
            },
            {
                "name": "Tooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/InputField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "CheckboxSizeEnum",
                "childs": [
                    {
                        "name": "Small",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "small"
                    },
                    {
                        "name": "Regular",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "regular"
                    },
                    {
                        "name": "Large",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "large"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/checkbox/enums/checkbox-size.enum.ts"
            },
            {
                "name": "InputSizeEnum",
                "childs": [
                    {
                        "name": "Small",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "small"
                    },
                    {
                        "name": "Regular",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "regular"
                    },
                    {
                        "name": "Large",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "large"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/input/enums/input-size.enum.ts"
            },
            {
                "name": "RadioButtonGroupSizeEnum",
                "childs": [
                    {
                        "name": "Small",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "small"
                    },
                    {
                        "name": "Regular",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "regular"
                    },
                    {
                        "name": "Large",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "large"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/radio-button-group/enums/radio-button-group-size.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/InputField.stories.ts": [
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CreditCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HelpMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Image",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Link",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PhoneNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Select",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SelectWithImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Tag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputFieldComponent>",
                    "defaultValue": "(args: InputFieldComponent) => ({\r\n    props: args,\r\n})"
                },
                {
                    "name": "Tooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/Checkbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/InputNumber.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputNumber.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputNumber.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/InputNumber.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputNumberComponent>",
                    "defaultValue": "(args: InputNumberComponent) => ({\r\n    props: args,\r\n})"
                }
            ],
            "src/stories/RadioButtonGroup.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/RadioButtonGroup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/RadioButtonGroup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RadioButtonGroupComponent>",
                    "defaultValue": "(\n  args: RadioButtonGroupComponent\n) => ({\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateStories.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "TemplateStories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n  template: ` <div class='buttons-container'>\n                <pri-button\n                  url=\"#\"\n                  icon=\"${args.icon}\"\n                  text=\"${args.text}\"\n                  size=\"${args.size}\"\n                  type=\"primaryFilled\"\n                  color=\"${args.color}\"\n                  [count] = \"${args.count}\"\n                  [nextButton] = \"${args.nextButton}\"\n                  [isDisabled] = \"${args.isDisabled}\"\n                  [loading] = \"${args.loading}\"\n                  extraClasses=\"\"\n                  ></pri-button>\n\n                <pri-button\n                  url=\"#\"\n                  icon=\"${args.icon}\"\n                  text=\"${args.text}\"\n                  size=\"${args.size}\"\n                  type=\"primaryOutlined\"\n                  color=\"${args.color}\"\n                  [count] = \"${args.count}\"\n                  [nextButton] = \"${args.nextButton}\"\n                  [isDisabled] = \"${args.isDisabled}\"\n                  [loading] = \"${args.loading}\"\n                  extraClasses=\"\"\n                ></pri-button>\n\n                <pri-button\n                  url=\"#\"\n                  icon=\"${args.icon}\"\n                  text=\"${args.text}\"\n                  size=\"${args.size}\"\n                  type=\"secondaryFilled\"\n                  color=\"${args.color}\"\n                  [count] = \"${args.count}\"\n                  [nextButton] = \"${args.nextButton}\"\n                  [isDisabled] = \"${args.isDisabled}\"\n                  [loading] = \"${args.loading}\"\n                  extraClasses=\"\"\n                ></pri-button>\n\n                <pri-button\n                  url=\"#\"\n                  icon=\"${args.icon}\"\n                  text=\"${args.text}\"\n                  size=\"${args.size}\"\n                  type=\"secondaryOutlined\"\n                  color=\"${args.color}\"\n                  [count] = \"${args.count}\"\n                  [nextButton] = \"${args.nextButton}\"\n                  [isDisabled] = \"${args.isDisabled}\"\n                  [loading] = \"${args.loading}\"\n                  extraClasses=\"\"\n                ></pri-button>\n                \n                <pri-button\n                  url=\"#\"\n                  icon=\"${args.icon}\"\n                  text=\"${args.text}\"\n                  size=\"${args.size}\"\n                  type=\"tertiary\"\n                  color=\"${args.color}\"\n                  [count] = \"${args.count}\"\n                  [nextButton] = \"${args.nextButton}\"\n                  [isDisabled] = \"${args.isDisabled}\"\n                  [loading] = \"${args.loading}\"\n                  extraClasses=\"\"\n                ></pri-button>\n              </div>`\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/checkbox/enums/checkbox-size.enum.ts": [
                {
                    "name": "CheckboxSizeEnum",
                    "childs": [
                        {
                            "name": "Small",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "small"
                        },
                        {
                            "name": "Regular",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "regular"
                        },
                        {
                            "name": "Large",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "large"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/checkbox/enums/checkbox-size.enum.ts"
                }
            ],
            "src/input/enums/input-size.enum.ts": [
                {
                    "name": "InputSizeEnum",
                    "childs": [
                        {
                            "name": "Small",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "small"
                        },
                        {
                            "name": "Regular",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "regular"
                        },
                        {
                            "name": "Large",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "large"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/input/enums/input-size.enum.ts"
                }
            ],
            "src/radio-button-group/enums/radio-button-group-size.enum.ts": [
                {
                    "name": "RadioButtonGroupSizeEnum",
                    "childs": [
                        {
                            "name": "Small",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "small"
                        },
                        {
                            "name": "Regular",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "regular"
                        },
                        {
                            "name": "Large",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "large"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/radio-button-group/enums/radio-button-group-size.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 8,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/checkbox/options/checkbox-options.interface.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ICheckboxOptions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/checkbox/options/checkbox.options.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CheckboxOptions",
                "coveragePercent": 80,
                "coverageCount": "4/5",
                "status": "very-good"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/input-field/input-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/52",
                "status": "low"
            },
            {
                "filePath": "src/input-number/input-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputNumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/input/options/input.options.ts",
                "type": "class",
                "linktype": "classe",
                "name": "InputOptions",
                "coveragePercent": 100,
                "coverageCount": "4/4",
                "status": "very-good"
            },
            {
                "filePath": "src/radio-button-group/interfaces/radio-button-group.interface.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IRadioButtonGroup",
                "coveragePercent": 100,
                "coverageCount": "7/7",
                "status": "very-good"
            },
            {
                "filePath": "src/radio-button-group/options/radio-button-group-options.interface.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IRadioButtonGroupOptions",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/radio-button-group/options/radio-button-group.options.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RadioButtonGroupOptions",
                "coveragePercent": 66,
                "coverageCount": "2/3",
                "status": "good"
            },
            {
                "filePath": "src/radio-button-group/radio-button-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateStories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreditCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HelpMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Image",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Link",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PhoneNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectWithImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputNumber.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputNumber.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/InputNumber.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/RadioButtonGroup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/RadioButtonGroup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}